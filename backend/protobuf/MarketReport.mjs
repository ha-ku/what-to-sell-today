// code generated by pbf v4.0.1

export function readHistoryRecord(pbf, end) {
    return pbf.readFields(readHistoryRecordField, {hq: false, pricePerUnit: 0, quantity: 0, timestamp: 0}, end);
}
function readHistoryRecordField(tag, obj, pbf) {
    if (tag === 1) obj.hq = pbf.readBoolean();
    else if (tag === 2) obj.pricePerUnit = pbf.readVarint(true);
    else if (tag === 3) obj.quantity = pbf.readVarint(true);
    else if (tag === 4) obj.timestamp = pbf.readVarint(true);
}
export function writeHistoryRecord(obj, pbf) {
    if (obj.hq) pbf.writeBooleanField(1, obj.hq);
    if (obj.pricePerUnit) pbf.writeVarintField(2, obj.pricePerUnit);
    if (obj.quantity) pbf.writeVarintField(3, obj.quantity);
    if (obj.timestamp) pbf.writeVarintField(4, obj.timestamp);
}

export function readHistory(pbf, end) {
    return pbf.readFields(readHistoryField, {itemID: 0, entries: []}, end);
}
function readHistoryField(tag, obj, pbf) {
    if (tag === 1) obj.itemID = pbf.readVarint(true);
    else if (tag === 2) obj.entries.push(readHistoryRecord(pbf, pbf.readVarint() + pbf.pos));
}
export function writeHistory(obj, pbf) {
    if (obj.itemID) pbf.writeVarintField(1, obj.itemID);
    if (obj.entries) for (const item of obj.entries) pbf.writeMessage(2, writeHistoryRecord, item);
}

export function readMarketRecord(pbf, end) {
    return pbf.readFields(readMarketRecordField, {hq: false, pricePerUnit: 0, quantity: 0, retainerName: ""}, end);
}
function readMarketRecordField(tag, obj, pbf) {
    if (tag === 1) obj.hq = pbf.readBoolean();
    else if (tag === 2) obj.pricePerUnit = pbf.readVarint(true);
    else if (tag === 3) obj.quantity = pbf.readVarint(true);
    else if (tag === 4) obj.retainerName = pbf.readString();
}
export function writeMarketRecord(obj, pbf) {
    if (obj.hq) pbf.writeBooleanField(1, obj.hq);
    if (obj.pricePerUnit) pbf.writeVarintField(2, obj.pricePerUnit);
    if (obj.quantity) pbf.writeVarintField(3, obj.quantity);
    if (obj.retainerName) pbf.writeStringField(4, obj.retainerName);
}

export function readMarket(pbf, end) {
    return pbf.readFields(readMarketField, {itemID: 0, lastUploadTime: 0, listings: []}, end);
}
function readMarketField(tag, obj, pbf) {
    if (tag === 1) obj.itemID = pbf.readVarint(true);
    else if (tag === 2) obj.lastUploadTime = pbf.readVarint(true);
    else if (tag === 3) obj.listings.push(readMarketRecord(pbf, pbf.readVarint() + pbf.pos));
}
export function writeMarket(obj, pbf) {
    if (obj.itemID) pbf.writeVarintField(1, obj.itemID);
    if (obj.lastUploadTime) pbf.writeVarintField(2, obj.lastUploadTime);
    if (obj.listings) for (const item of obj.listings) pbf.writeMessage(3, writeMarketRecord, item);
}

export function readRecord(pbf, end) {
    return pbf.readFields(readRecordField, {price: 0, quantity: 0, seller: ""}, end);
}
function readRecordField(tag, obj, pbf) {
    if (tag === 1) obj.price = pbf.readVarint(true);
    else if (tag === 2) obj.quantity = pbf.readVarint(true);
    else if (tag === 3) obj.seller = pbf.readString();
}
export function writeRecord(obj, pbf) {
    if (obj.price) pbf.writeVarintField(1, obj.price);
    if (obj.quantity) pbf.writeVarintField(2, obj.quantity);
    if (obj.seller) pbf.writeStringField(3, obj.seller);
}

export function readServerQualityReport(pbf, end) {
    return pbf.readFields(readServerQualityReportField, {lowestPrice: undefined, meanLowPrice: 0, meanLowHistoryPrice: 0, volumns: []}, end);
}
function readServerQualityReportField(tag, obj, pbf) {
    if (tag === 1) obj.lowestPrice = readRecord(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.meanLowPrice = pbf.readFloat();
    else if (tag === 3) obj.meanLowHistoryPrice = pbf.readFloat();
    else if (tag === 4) pbf.readPackedVarint(obj.volumns, true);
}
export function writeServerQualityReport(obj, pbf) {
    if (obj.lowestPrice) pbf.writeMessage(1, writeRecord, obj.lowestPrice);
    if (obj.meanLowPrice) pbf.writeFloatField(2, obj.meanLowPrice);
    if (obj.meanLowHistoryPrice) pbf.writeFloatField(3, obj.meanLowHistoryPrice);
    if (obj.volumns) pbf.writePackedVarint(4, obj.volumns);
}

export function readServerReport(pbf, end) {
    return pbf.readFields(readServerReportField, {nq: undefined, hq: undefined, all: undefined, lastUploadTime: 0}, end);
}
function readServerReportField(tag, obj, pbf) {
    if (tag === 1) obj.nq = readServerQualityReport(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 2) obj.hq = readServerQualityReport(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 3) obj.all = readServerQualityReport(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 4) obj.lastUploadTime = pbf.readVarint(true);
}
export function writeServerReport(obj, pbf) {
    if (obj.nq) pbf.writeMessage(1, writeServerQualityReport, obj.nq);
    if (obj.hq) pbf.writeMessage(2, writeServerQualityReport, obj.hq);
    if (obj.all) pbf.writeMessage(3, writeServerQualityReport, obj.all);
    if (obj.lastUploadTime) pbf.writeVarintField(4, obj.lastUploadTime);
}

export function readError(pbf, end) {
    return pbf.readFields(readErrorField, {code: 0, content: ""}, end);
}
function readErrorField(tag, obj, pbf) {
    if (tag === 1) obj.code = pbf.readVarint(true);
    else if (tag === 2) obj.content = pbf.readString();
}
export function writeError(obj, pbf) {
    if (obj.code) pbf.writeVarintField(1, obj.code);
    if (obj.content) pbf.writeStringField(2, obj.content);
}

export function readReport(pbf, end) {
    return pbf.readFields(readReportField, {name: "", ID: 0, enName: "", cost: 0, lastUploadTime: 0, nq: undefined, hq: undefined, all: undefined, defaultServer: undefined, err: undefined}, end);
}
function readReportField(tag, obj, pbf) {
    if (tag === 1) obj.name = pbf.readString();
    else if (tag === 2) obj.ID = pbf.readVarint(true);
    else if (tag === 3) obj.enName = pbf.readString();
    else if (tag === 4) obj.cost = pbf.readFloat();
    else if (tag === 5) obj.lastUploadTime = pbf.readVarint(true);
    else if (tag === 6) obj.nq = readServerQualityReport(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 7) obj.hq = readServerQualityReport(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 8) obj.all = readServerQualityReport(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 9) obj.defaultServer = readServerReport(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 10) obj.err = readError(pbf, pbf.readVarint() + pbf.pos);
}
export function writeReport(obj, pbf) {
    if (obj.name) pbf.writeStringField(1, obj.name);
    if (obj.ID) pbf.writeVarintField(2, obj.ID);
    if (obj.enName) pbf.writeStringField(3, obj.enName);
    if (obj.cost) pbf.writeFloatField(4, obj.cost);
    if (obj.lastUploadTime) pbf.writeVarintField(5, obj.lastUploadTime);
    if (obj.nq) pbf.writeMessage(6, writeServerQualityReport, obj.nq);
    if (obj.hq) pbf.writeMessage(7, writeServerQualityReport, obj.hq);
    if (obj.all) pbf.writeMessage(8, writeServerQualityReport, obj.all);
    if (obj.defaultServer) pbf.writeMessage(9, writeServerReport, obj.defaultServer);
    if (obj.err) pbf.writeMessage(10, writeError, obj.err);
}
